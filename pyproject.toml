[tool.poetry]
name = "fastapi-fast-template"
version = "0.0.7"
description = "This library helps you not get involved in the complexities of FastAPI and its libraries and focus all your attention on the application."
authors = ["Saeid Noormohammadi <heysaeid92@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/heysaeid/fastapi-fast-template"
repository = "https://github.com/heysaeid/fastapi-fast-template"
documentation = "https://github.com/heysaeid/fastapi-fast-template"
keywords = ["fastapi", "fastapi template", "fastapi fast template", "fastapi boilerplate"]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Framework :: Pydantic",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]


[tool.poetry.dependencies]
python = "^3.7"
fastapi = "*"
uvicorn = "*"
pydantic = "*"
python-dotenv = "*"
pydantic-settings = "*"
asyncpg = "*"
ruff = "*"
pre-commit = "*"
termcolor = "*"
StrEnum = "*"


[tool.poetry.scripts]
fast = "fastapi_fast_template.cli:Cli.main"


[tool.ruff]
line-length = 79
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "F821",  # Undefined name
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
